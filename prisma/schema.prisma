// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String @id @default(uuid())
  clerkId String @unique
  email   String @unique

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  JournalEntry JournalEntry[]
  Analysis     Analysis[]
}

model JournalEntry {
  id      String @id @default(uuid())
  content String @db.Text

  User   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Analysis Analysis?

  @@unique([userId, id])
}

model Analysis {
  id String @id @default(uuid())

  entryId      String
  JournalEntry JournalEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)
  userId       String
  User         User         @relation(fields: [userId], references: [id], onDelete: Cascade)

  mood           String
  summary        String  @db.Text
  subject        String
  color          String
  negative       Boolean
  sentimentScore Float   @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([entryId])
}
